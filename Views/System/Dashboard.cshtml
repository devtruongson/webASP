<div class="main">
    <div class="container">
        <div class="row">
            <div class="col-2">
                <div class="sibar">
                    <div class="sibar-control">
                        <button id="btn-info" data-render="manage-admin">Quản Lí Thông tin Admin</button>
                    </div>
                    <div class="sibar-control">
                        <button id="btn-price" data-render="manage-price">Quản Lí Price</button>
                    </div>
                    <div class="sibar-control">
                        <button id="btn-blog" data-render="manage-blogs">Quản Lí Bài Viết</button>
                    </div>
                    <div class="sibar-control">
                        <button id="btn-rented-bike" data-render="rented-bike">Xem xe đã thuê</button>
                    </div>
                    <div class="sibar-control">
                        <button id="btn-all-code-control" data-render="all-code-control">Quản lý dữ liệu chung</button>
                    </div>
                </div>
            </div>
            <div class="col-10 min-vh-100" id="">
                <div class="form-info-admin form-content"></div>
            </div>
        </div>
    </div>
</div>

<script>
    if (!JSON.parse(localStorage.getItem("isLoginIn"))) {
        alert("Bạn không có quyền!");
        window.location.href = "http://localhost:8080/System";
    }

    const arrRender = [{
        renderKey: "manage-admin",
        elementRender: `/InfoAdmin`,
        urlScript: "/assets/js/infoAdmin.js",
        class: "script-info",

    }, {
        renderKey: "manage-price",
        elementRender: "/PriceCars",
        urlScript: "/assets/js/price.js",
        class: "script-price",
    }, {
        renderKey: "rented-bike",
        elementRender: `/RentedBike`
    },
    {
        renderKey: "manage-blogs",
        elementRender: "~/Views/System/blog.cshtml",
        urlScript: "/assets/js/blog.js",
        class: "script-blog",
        type: "blog"
    }, {
        renderKey: "all-code-control",
        elementRender: `/AllCode`
    }]
    function loadPartial(viewUrl, callback, type = "load") {

        if(type === "load") {
             fetch(viewUrl)
            .then(async (res) => await res.text())
            .then(res => {
                callback(res);
            });
        }else{
             fetch(`/System/InfoAdmin?query=${viewUrl}`)
            .then(async (res) => await res.text())
            .then(res => {
                callback(res)
            })
        }


    }

    function renderPartial(content) {
        renderContent.innerHTML = content;
    }

    const btnElements = document.querySelectorAll("button[data-render]");
    const renderContent = document.querySelector(".form-content");

    btnElements.forEach((btn) => {
        btn.addEventListener("click", (e) => {
            const dataActive = e.target.dataset.render;
            const dataRender = arrRender.find(item => item.renderKey === dataActive);
            if (dataRender && renderContent) {
                if(dataRender.type) {
                    loadPartial(dataRender.elementRender, renderPartial, dataRender.type);
                }else{
                     loadPartial(dataRender.elementRender, renderPartial);
                }
            }
            btnElements.forEach((btnChild) => {
                btnChild.classList.remove("active");
            });
            if (dataRender) {
                btn.classList.add("active");
            }
            if (dataRender && renderContent) {
                loadPartial(dataRender.elementRender, renderPartial);
                if (dataRender.urlScript) {
                    const scriptElement = document.createElement("script");
                    scriptElement.classList.add(dataRender.class);
                    scriptElement.src = dataRender.urlScript;
                    scriptElement.setAttribute("defer", "");
                    scriptElement.setAttribute("type", "text/javascript");
                    document.body.appendChild(scriptElement);
                }

            }
        });
    });
    const keyactive = window.location.search.split("=")[1];
    if (keyactive) {
        const dataRender = arrRender.find(item => item.renderKey === keyactive);
            if (dataRender && renderContent) {
                loadPartial(dataRender.elementRender, renderPartial);
            }
            btnElements.forEach((btnChild) => {
                btnChild.classList.remove("active");
            });
            if (dataRender) {
                btn.classList.add("active");
            }
        }

    @*function loadPartial(query, callback) {
        fetch(`/System/InfoAdmin?query=${query}`)
            .then(async (res) => await res.text())
            .then(res => {
                callback(res)
            })
    }

    function renderPartial(content) {
        renderContent.innerHTML = content;
    }

    loadPartial("~/Views/System/InfoAdmin.cshtml", renderPartial)
    const btnElements = document.querySelectorAll("button[data-render]");
    const renderContent = document.querySelector(".form-content");

    btnElements.forEach((btn) => {
        btn.addEventListener("click", (e) => {
            const dataActive = e.target.dataset.render;
            const dataRender = arrRender.find(item => item.renderKey === dataActive);
            btnElements.forEach((btnChild) => {
                btnChild.classList.remove("active");
            })
            if (dataRender) {
                btn.classList.add("active");
            }
            if (dataRender && renderContent) {
                loadPartial(dataRender.elementRender, renderPartial);
                if (dataRender.urlScript) {
                    const scriptElement = document.createElement("script");
                    scriptElement.classList.add(dataRender.class);
                    scriptElement.src = dataRender.urlScript;
                    scriptElement.setAttribute("defer", "");
                    scriptElement.setAttribute("type", "text/javascript");
                    document.body.appendChild(scriptElement);
                }

            }

        })
    }) *@




    @* const sibInfoAdmin = document.querySelector("#btn-info-admin");
        const sibPrice = document.querySelector("#btn-price");

        const handleRemoveActive = () => {

        const listButton = document.querySelectorAll(".sibar button");

        listButton.forEach(button => {
        button.classList.remove("active");
        });
        }

        const handleAddDisplayNone = () => {
        const listContents = document.querySelectorAll(".form-content");
        listContents.forEach(div => {
        div.classList.add("display-none")
        })

        } *@

    @* info admin *@
    @*
        sibInfoAdmin.addEventListener("click", function () {

        const content = document.querySelector(".form-info-admin")

        handleRemoveActive();
        handleAddDisplayNone();

        content.classList.remove("display-none")
        sibInfoAdmin.classList.add("active");
        }); *@

    @* price *@

    @* sibPrice.addEventListener("click", function () {

        const content = document.querySelector(".form-price ")

        handleRemoveActive();
        handleAddDisplayNone();

        content.classList.remove("display-none")
        sibPrice.classList.add("active");
        }); *@

        function handleRenderAfterChange(index){
            console.log('a');
           loadPartial(arrRender[index].elementRender,renderPartial);
           const scriptElement = document.createElement("script");
            scriptElement.classList.add(arrRender[index].class);
            scriptElement.src = arrRender[index].urlScript;
            scriptElement.setAttribute("defer", "");
            scriptElement.setAttribute("type", "text/javascript");
            document.body.appendChild(scriptElement);
        }


    if (window.location.search.includes("isChanged")) {
        if (window.location.search.split("isChanged=")[1]?.split("&password=")[0] === "True") {
            let data = JSON.parse(localStorage.getItem("dataUser"));
            data.pop();
            const passwordNew = window.location.search.split("&password=")[1];
            data.push(passwordNew);
            localStorage.setItem("dataUser", JSON.stringify(data));
            alert("Bạn đã thay đổi mạt khẩu thành công");
        }
        else {
            alert("Đổi mật khẩu thất bại bạn vui lòng thử lại sau !");
        }
        handleRenderAfterChange(0);
        const btnInfo = document.querySelector("#btn-info");
        btnInfo.classList.add("active")
    }

    const url = new URL(window.location.href);

    const params = new URLSearchParams(url.search);

    if (params.has("changePrice")) {
        if (params.get("changePrice") === "true") {
            alert("Cập nhật giá xe thành công");
        }
        else {
            alert("Đã xảy ra lỗi vui lòng thử lại sau !");
        }
        handleRenderAfterChange(1);
        const btnInfo = document.querySelector("#btn-price");
        btnInfo.classList.add("active")
    }


</script>